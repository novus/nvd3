// Generated by CoffeeScript 1.7.1
(function() {
  var apiTest, should,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  should = chai.should();

  apiTest = apiTest || {};

  apiTest.models.layer = function(instance, overrides, ignoreList) {
    if (overrides == null) {
      overrides = [];
    }
    if (ignoreList == null) {
      ignoreList = [];
    }
    return describe('Testing Layer API', function() {
      var ignore, options;
      ignore = function(a, b) {
        if (__indexOf.call(ignoreList, b) < 0) {
          return a.concat(b);
        } else {
          return a;
        }
      };

      /*
      These are the foundational options for every layer.
      These are the only ones that are guaranteed
      to be exposed as the API.
       */
      options = ['height', 'width', 'margin'].reduce(ignore, []);
      return checkProperties({
        instance: instance,
        properties: options,
        overrides: overrides,
        parent: Layer
      });
    });
  };

  describe('Layer Model', function() {
    return apiTest.models.layer(new Layer());
  });

}).call(this);
